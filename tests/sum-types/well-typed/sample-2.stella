language core;
extend with #sum-types, #structural-patterns;

fn main(input : Nat + (Bool + (fn (Nat) -> Nat))) -> Nat {
  return match input {
        inl(number) => number
      | inr(inl(false)) => 0
      | inr(inl(true)) => succ(0)
      | inr(inr(fun)) => fun(0)
   }
}